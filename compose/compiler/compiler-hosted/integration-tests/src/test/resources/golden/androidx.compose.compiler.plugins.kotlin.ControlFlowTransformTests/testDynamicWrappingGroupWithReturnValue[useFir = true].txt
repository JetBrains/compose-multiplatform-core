//
// Source
// ------------------------------------------

import androidx.compose.runtime.Composable
import androidx.compose.runtime.ReadOnlyComposable
import androidx.compose.runtime.key
import androidx.compose.runtime.NonRestartableComposable


@NonRestartableComposable @Composable
fun Example(x: Int): Int {
    return if (x > 0) {
        if (B()) 1
        else if (B()) 2
        else 3
    } else 4
}

//
// Transformed IR
// ------------------------------------------

@NonRestartableComposable
@Composable
fun Example(x: Int, %composer: Composer?, %changed: Int): Int {
  sourceInformationMarkerStart(%composer, <>, "C(Example)<B()>,<B()>:Test.kt")
  if (isTraceInProgress()) {
    traceEventStart(<>, %changed, -1, <>)
  }
  val tmp0 = if (x > 0) {
    val tmp1_group = if (B(%composer, 0)) 1 else if (B(%composer, 0)) 2 else 3
    tmp1_group
  } else {
    4
  }
  if (isTraceInProgress()) {
    traceEventEnd()
  }
  sourceInformationMarkerEnd(%composer)
  return tmp0
}
